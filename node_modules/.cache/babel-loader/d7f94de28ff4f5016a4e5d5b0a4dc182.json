{"ast":null,"code":"import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n\n    this._processBounce = (position, radius, area) => {\n      const query = this.container.particles.quadTree.query(area, p => this.isEnabled(p));\n\n      for (const particle of query) {\n        if (area instanceof Circle) {\n          circleBounce(circleBounceDataFromParticle(particle), {\n            position,\n            radius,\n            mass: radius ** 2 * Math.PI / 2,\n            velocity: Vector.origin,\n            factor: Vector.origin\n          });\n        } else if (area instanceof Rectangle) {\n          rectBounce(particle, calculateBounds(position, radius));\n        }\n      }\n    };\n\n    this._processMouseBounce = () => {\n      const container = this.container,\n            pxRatio = container.retina.pixelRatio,\n            tolerance = 10 * pxRatio,\n            mousePos = container.interactivity.mouse.position,\n            radius = container.retina.bounceModeDistance;\n\n      if (!radius || radius < 0 || !mousePos) {\n        return;\n      }\n\n      this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    };\n\n    this._singleSelectorBounce = (selector, div) => {\n      const container = this.container,\n            query = document.querySelectorAll(selector);\n\n      if (!query.length) {\n        return;\n      }\n\n      query.forEach(item => {\n        const elem = item,\n              pxRatio = container.retina.pixelRatio,\n              pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        },\n              radius = elem.offsetWidth / 2 * pxRatio,\n              tolerance = 10 * pxRatio,\n              area = div.type === \"circle\" ? new Circle(pos.x, pos.y, radius + tolerance) : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n\n        this._processBounce(pos, radius, area);\n      });\n    };\n  }\n\n  clear() {}\n\n  init() {\n    const container = this.container,\n          bounce = container.actualOptions.interactivity.modes.bounce;\n\n    if (!bounce) {\n      return;\n    }\n\n    container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n  }\n\n  async interact() {\n    const container = this.container,\n          options = container.actualOptions,\n          events = options.interactivity.events,\n          mouseMoveStatus = container.interactivity.status === mouseMoveEvent,\n          hoverEnabled = events.onHover.enable,\n          hoverMode = events.onHover.mode,\n          divs = events.onDiv;\n\n    if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n      this._processMouseBounce();\n    } else {\n      divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n    }\n  }\n\n  isEnabled(particle) {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = (particle?.interactivity ?? options.interactivity).events,\n          divs = events.onDiv;\n    return mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode) || isDivModeEnabled(\"bounce\", divs);\n  }\n\n  loadModeOptions(options) {\n    if (!options.bounce) {\n      options.bounce = new Bounce();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.bounce.load(source?.bounce);\n    }\n  }\n\n  reset() {}\n\n}","map":{"version":3,"names":["Circle","ExternalInteractorBase","Rectangle","Vector","calculateBounds","circleBounce","circleBounceDataFromParticle","divModeExecute","isDivModeEnabled","isInArray","mouseMoveEvent","rectBounce","Bounce","Bouncer","constructor","container","_processBounce","position","radius","area","query","particles","quadTree","p","isEnabled","particle","mass","Math","PI","velocity","origin","factor","_processMouseBounce","pxRatio","retina","pixelRatio","tolerance","mousePos","interactivity","mouse","bounceModeDistance","x","y","_singleSelectorBounce","selector","div","document","querySelectorAll","length","forEach","item","elem","pos","offsetLeft","offsetWidth","offsetTop","offsetHeight","type","clear","init","bounce","actualOptions","modes","distance","interact","options","events","mouseMoveStatus","status","hoverEnabled","onHover","enable","hoverMode","mode","divs","onDiv","loadModeOptions","sources","source","load","reset"],"sources":["/Users/mohammedhusain/myportfolio/node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js"],"sourcesContent":["import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,sBAAjB,EAAyCC,SAAzC,EAAoDC,MAApD,EAA4DC,eAA5D,EAA6EC,YAA7E,EAA2FC,4BAA3F,EAAyHC,cAAzH,EAAyIC,gBAAzI,EAA2JC,SAA3J,EAAsKC,cAAtK,EAAsLC,UAAtL,QAAyM,oBAAzM;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAO,MAAMC,OAAN,SAAsBZ,sBAAtB,CAA6C;EAChDa,WAAW,CAACC,SAAD,EAAY;IACnB,MAAMA,SAAN;;IACA,KAAKC,cAAL,GAAsB,CAACC,QAAD,EAAWC,MAAX,EAAmBC,IAAnB,KAA4B;MAC9C,MAAMC,KAAK,GAAG,KAAKL,SAAL,CAAeM,SAAf,CAAyBC,QAAzB,CAAkCF,KAAlC,CAAwCD,IAAxC,EAA+CI,CAAD,IAAO,KAAKC,SAAL,CAAeD,CAAf,CAArD,CAAd;;MACA,KAAK,MAAME,QAAX,IAAuBL,KAAvB,EAA8B;QAC1B,IAAID,IAAI,YAAYnB,MAApB,EAA4B;UACxBK,YAAY,CAACC,4BAA4B,CAACmB,QAAD,CAA7B,EAAyC;YACjDR,QADiD;YAEjDC,MAFiD;YAGjDQ,IAAI,EAAGR,MAAM,IAAI,CAAV,GAAcS,IAAI,CAACC,EAApB,GAA0B,CAHiB;YAIjDC,QAAQ,EAAE1B,MAAM,CAAC2B,MAJgC;YAKjDC,MAAM,EAAE5B,MAAM,CAAC2B;UALkC,CAAzC,CAAZ;QAOH,CARD,MASK,IAAIX,IAAI,YAAYjB,SAApB,EAA+B;UAChCS,UAAU,CAACc,QAAD,EAAWrB,eAAe,CAACa,QAAD,EAAWC,MAAX,CAA1B,CAAV;QACH;MACJ;IACJ,CAhBD;;IAiBA,KAAKc,mBAAL,GAA2B,MAAM;MAC7B,MAAMjB,SAAS,GAAG,KAAKA,SAAvB;MAAA,MAAkCkB,OAAO,GAAGlB,SAAS,CAACmB,MAAV,CAAiBC,UAA7D;MAAA,MAAyEC,SAAS,GAAG,KAAKH,OAA1F;MAAA,MAAmGI,QAAQ,GAAGtB,SAAS,CAACuB,aAAV,CAAwBC,KAAxB,CAA8BtB,QAA5I;MAAA,MAAsJC,MAAM,GAAGH,SAAS,CAACmB,MAAV,CAAiBM,kBAAhL;;MACA,IAAI,CAACtB,MAAD,IAAWA,MAAM,GAAG,CAApB,IAAyB,CAACmB,QAA9B,EAAwC;QACpC;MACH;;MACD,KAAKrB,cAAL,CAAoBqB,QAApB,EAA8BnB,MAA9B,EAAsC,IAAIlB,MAAJ,CAAWqC,QAAQ,CAACI,CAApB,EAAuBJ,QAAQ,CAACK,CAAhC,EAAmCxB,MAAM,GAAGkB,SAA5C,CAAtC;IACH,CAND;;IAOA,KAAKO,qBAAL,GAA6B,CAACC,QAAD,EAAWC,GAAX,KAAmB;MAC5C,MAAM9B,SAAS,GAAG,KAAKA,SAAvB;MAAA,MAAkCK,KAAK,GAAG0B,QAAQ,CAACC,gBAAT,CAA0BH,QAA1B,CAA1C;;MACA,IAAI,CAACxB,KAAK,CAAC4B,MAAX,EAAmB;QACf;MACH;;MACD5B,KAAK,CAAC6B,OAAN,CAAeC,IAAD,IAAU;QACpB,MAAMC,IAAI,GAAGD,IAAb;QAAA,MAAmBjB,OAAO,GAAGlB,SAAS,CAACmB,MAAV,CAAiBC,UAA9C;QAAA,MAA0DiB,GAAG,GAAG;UAC5DX,CAAC,EAAE,CAACU,IAAI,CAACE,UAAL,GAAkBF,IAAI,CAACG,WAAL,GAAmB,CAAtC,IAA2CrB,OADc;UAE5DS,CAAC,EAAE,CAACS,IAAI,CAACI,SAAL,GAAiBJ,IAAI,CAACK,YAAL,GAAoB,CAAtC,IAA2CvB;QAFc,CAAhE;QAAA,MAGGf,MAAM,GAAIiC,IAAI,CAACG,WAAL,GAAmB,CAApB,GAAyBrB,OAHrC;QAAA,MAG8CG,SAAS,GAAG,KAAKH,OAH/D;QAAA,MAGwEd,IAAI,GAAG0B,GAAG,CAACY,IAAJ,KAAa,QAAb,GACzE,IAAIzD,MAAJ,CAAWoD,GAAG,CAACX,CAAf,EAAkBW,GAAG,CAACV,CAAtB,EAAyBxB,MAAM,GAAGkB,SAAlC,CADyE,GAEzE,IAAIlC,SAAJ,CAAciD,IAAI,CAACE,UAAL,GAAkBpB,OAAlB,GAA4BG,SAA1C,EAAqDe,IAAI,CAACI,SAAL,GAAiBtB,OAAjB,GAA2BG,SAAhF,EAA2Fe,IAAI,CAACG,WAAL,GAAmBrB,OAAnB,GAA6BG,SAAS,GAAG,CAApI,EAAuIe,IAAI,CAACK,YAAL,GAAoBvB,OAApB,GAA8BG,SAAS,GAAG,CAAjL,CALN;;QAMA,KAAKpB,cAAL,CAAoBoC,GAApB,EAAyBlC,MAAzB,EAAiCC,IAAjC;MACH,CARD;IASH,CAdD;EAeH;;EACDuC,KAAK,GAAG,CACP;;EACDC,IAAI,GAAG;IACH,MAAM5C,SAAS,GAAG,KAAKA,SAAvB;IAAA,MAAkC6C,MAAM,GAAG7C,SAAS,CAAC8C,aAAV,CAAwBvB,aAAxB,CAAsCwB,KAAtC,CAA4CF,MAAvF;;IACA,IAAI,CAACA,MAAL,EAAa;MACT;IACH;;IACD7C,SAAS,CAACmB,MAAV,CAAiBM,kBAAjB,GAAsCoB,MAAM,CAACG,QAAP,GAAkBhD,SAAS,CAACmB,MAAV,CAAiBC,UAAzE;EACH;;EACa,MAAR6B,QAAQ,GAAG;IACb,MAAMjD,SAAS,GAAG,KAAKA,SAAvB;IAAA,MAAkCkD,OAAO,GAAGlD,SAAS,CAAC8C,aAAtD;IAAA,MAAqEK,MAAM,GAAGD,OAAO,CAAC3B,aAAR,CAAsB4B,MAApG;IAAA,MAA4GC,eAAe,GAAGpD,SAAS,CAACuB,aAAV,CAAwB8B,MAAxB,KAAmC1D,cAAjK;IAAA,MAAiL2D,YAAY,GAAGH,MAAM,CAACI,OAAP,CAAeC,MAA/M;IAAA,MAAuNC,SAAS,GAAGN,MAAM,CAACI,OAAP,CAAeG,IAAlP;IAAA,MAAwPC,IAAI,GAAGR,MAAM,CAACS,KAAtQ;;IACA,IAAIR,eAAe,IAAIE,YAAnB,IAAmC5D,SAAS,CAAC,QAAD,EAAW+D,SAAX,CAAhD,EAAuE;MACnE,KAAKxC,mBAAL;IACH,CAFD,MAGK;MACDzB,cAAc,CAAC,QAAD,EAAWmE,IAAX,EAAiB,CAAC9B,QAAD,EAAWC,GAAX,KAAmB,KAAKF,qBAAL,CAA2BC,QAA3B,EAAqCC,GAArC,CAApC,CAAd;IACH;EACJ;;EACDrB,SAAS,CAACC,QAAD,EAAW;IAChB,MAAMV,SAAS,GAAG,KAAKA,SAAvB;IAAA,MAAkCkD,OAAO,GAAGlD,SAAS,CAAC8C,aAAtD;IAAA,MAAqEtB,KAAK,GAAGxB,SAAS,CAACuB,aAAV,CAAwBC,KAArG;IAAA,MAA4G2B,MAAM,GAAG,CAACzC,QAAQ,EAAEa,aAAV,IAA2B2B,OAAO,CAAC3B,aAApC,EAAmD4B,MAAxK;IAAA,MAAgLQ,IAAI,GAAGR,MAAM,CAACS,KAA9L;IACA,OAASpC,KAAK,CAACtB,QAAN,IAAkBiD,MAAM,CAACI,OAAP,CAAeC,MAAjC,IAA2C9D,SAAS,CAAC,QAAD,EAAWyD,MAAM,CAACI,OAAP,CAAeG,IAA1B,CAArD,IACJjE,gBAAgB,CAAC,QAAD,EAAWkE,IAAX,CADpB;EAEH;;EACDE,eAAe,CAACX,OAAD,EAAsB;IACjC,IAAI,CAACA,OAAO,CAACL,MAAb,EAAqB;MACjBK,OAAO,CAACL,MAAR,GAAiB,IAAIhD,MAAJ,EAAjB;IACH;;IAHgC,kCAATiE,OAAS;MAATA,OAAS;IAAA;;IAIjC,KAAK,MAAMC,MAAX,IAAqBD,OAArB,EAA8B;MAC1BZ,OAAO,CAACL,MAAR,CAAemB,IAAf,CAAoBD,MAAM,EAAElB,MAA5B;IACH;EACJ;;EACDoB,KAAK,GAAG,CACP;;AA3E+C"},"metadata":{},"sourceType":"module"}