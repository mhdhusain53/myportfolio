{"ast":null,"code":"import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n  constructor(x, y, radius) {\n    super(x, y);\n    this.radius = radius;\n  }\n\n  contains(point) {\n    return getDistance(point, this.position) <= this.radius;\n  }\n\n  intersects(range) {\n    const pos1 = this.position,\n          pos2 = range.position,\n          distPos = {\n      x: Math.abs(pos2.x - pos1.x),\n      y: Math.abs(pos2.y - pos1.y)\n    },\n          r = this.radius;\n\n    if (range instanceof Circle) {\n      const rSum = r + range.radius,\n            dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n      return rSum > dist;\n    } else if (range instanceof Rectangle) {\n      const {\n        width,\n        height\n      } = range.size,\n            edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n      return edges <= r ** 2 || distPos.x <= r + width && distPos.y <= r + height || distPos.x <= width || distPos.y <= height;\n    }\n\n    return false;\n  }\n\n}","map":{"version":3,"names":["Range","Rectangle","getDistance","Circle","constructor","x","y","radius","contains","point","position","intersects","range","pos1","pos2","distPos","Math","abs","r","rSum","dist","sqrt","width","height","size","edges","pow"],"sources":["/Users/mohammedhusain/myportfolio/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js"],"sourcesContent":["import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,MAAMC,MAAN,SAAqBH,KAArB,CAA2B;EAC9BI,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAOC,MAAP,EAAe;IACtB,MAAMF,CAAN,EAASC,CAAT;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;EACDC,QAAQ,CAACC,KAAD,EAAQ;IACZ,OAAOP,WAAW,CAACO,KAAD,EAAQ,KAAKC,QAAb,CAAX,IAAqC,KAAKH,MAAjD;EACH;;EACDI,UAAU,CAACC,KAAD,EAAQ;IACd,MAAMC,IAAI,GAAG,KAAKH,QAAlB;IAAA,MAA4BI,IAAI,GAAGF,KAAK,CAACF,QAAzC;IAAA,MAAmDK,OAAO,GAAG;MAAEV,CAAC,EAAEW,IAAI,CAACC,GAAL,CAASH,IAAI,CAACT,CAAL,GAASQ,IAAI,CAACR,CAAvB,CAAL;MAAgCC,CAAC,EAAEU,IAAI,CAACC,GAAL,CAASH,IAAI,CAACR,CAAL,GAASO,IAAI,CAACP,CAAvB;IAAnC,CAA7D;IAAA,MAA6HY,CAAC,GAAG,KAAKX,MAAtI;;IACA,IAAIK,KAAK,YAAYT,MAArB,EAA6B;MACzB,MAAMgB,IAAI,GAAGD,CAAC,GAAGN,KAAK,CAACL,MAAvB;MAAA,MAA+Ba,IAAI,GAAGJ,IAAI,CAACK,IAAL,CAAUN,OAAO,CAACV,CAAR,IAAa,CAAb,GAAiBU,OAAO,CAACT,CAAR,IAAa,CAAxC,CAAtC;MACA,OAAOa,IAAI,GAAGC,IAAd;IACH,CAHD,MAIK,IAAIR,KAAK,YAAYX,SAArB,EAAgC;MACjC,MAAM;QAAEqB,KAAF;QAASC;MAAT,IAAoBX,KAAK,CAACY,IAAhC;MAAA,MAAsCC,KAAK,GAAGT,IAAI,CAACU,GAAL,CAASX,OAAO,CAACV,CAAR,GAAYiB,KAArB,EAA4B,CAA5B,IAAiCN,IAAI,CAACU,GAAL,CAASX,OAAO,CAACT,CAAR,GAAYiB,MAArB,EAA6B,CAA7B,CAA/E;MACA,OAAQE,KAAK,IAAIP,CAAC,IAAI,CAAd,IACHH,OAAO,CAACV,CAAR,IAAaa,CAAC,GAAGI,KAAjB,IAA0BP,OAAO,CAACT,CAAR,IAAaY,CAAC,GAAGK,MADxC,IAEJR,OAAO,CAACV,CAAR,IAAaiB,KAFT,IAGJP,OAAO,CAACT,CAAR,IAAaiB,MAHjB;IAIH;;IACD,OAAO,KAAP;EACH;;AAtB6B"},"metadata":{},"sourceType":"module"}