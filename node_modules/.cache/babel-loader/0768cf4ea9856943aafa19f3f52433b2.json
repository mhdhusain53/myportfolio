{"ast":null,"code":"import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n  constructor() {\n    this.angle = new MoveAngle();\n    this.attract = new MoveAttract();\n    this.center = new MoveCenter();\n    this.decay = 0;\n    this.distance = {};\n    this.direction = \"none\";\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity();\n    this.path = new MovePath();\n    this.outModes = new OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin();\n    this.straight = false;\n    this.trail = new MoveTrail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n\n  get bounce() {\n    return this.collisions;\n  }\n\n  set bounce(value) {\n    this.collisions = value;\n  }\n\n  get collisions() {\n    return false;\n  }\n\n  set collisions(_) {}\n\n  get noise() {\n    return this.path;\n  }\n\n  set noise(value) {\n    this.path = value;\n  }\n\n  get outMode() {\n    return this.outModes.default;\n  }\n\n  set outMode(value) {\n    this.outModes.default = value;\n  }\n\n  get out_mode() {\n    return this.outMode;\n  }\n\n  set out_mode(value) {\n    this.outMode = value;\n  }\n\n  load(data) {\n    if (!data) {\n      return;\n    }\n\n    this.angle.load(isNumber(data.angle) ? {\n      value: data.angle\n    } : data.angle);\n    this.attract.load(data.attract);\n    this.center.load(data.center);\n\n    if (data.decay !== undefined) {\n      this.decay = setRangeValue(data.decay);\n    }\n\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n\n    if (data.distance !== undefined) {\n      this.distance = isNumber(data.distance) ? {\n        horizontal: data.distance,\n        vertical: data.distance\n      } : { ...data.distance\n      };\n    }\n\n    if (data.drift !== undefined) {\n      this.drift = setRangeValue(data.drift);\n    }\n\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n\n    this.gravity.load(data.gravity);\n    const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n\n    if (outModes !== undefined) {\n      if (isObject(outModes)) {\n        this.outModes.load(outModes);\n      } else {\n        this.outModes.load({\n          default: outModes\n        });\n      }\n    }\n\n    this.path.load(data.path ?? data.noise);\n\n    if (data.random !== undefined) {\n      this.random = data.random;\n    }\n\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n\n    this.spin.load(data.spin);\n\n    if (data.straight !== undefined) {\n      this.straight = data.straight;\n    }\n\n    this.trail.load(data.trail);\n\n    if (data.vibrate !== undefined) {\n      this.vibrate = data.vibrate;\n    }\n\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n\n}","map":{"version":3,"names":["isNumber","isObject","MoveAngle","MoveAttract","MoveCenter","MoveGravity","MovePath","MoveTrail","OutModes","Spin","setRangeValue","Move","constructor","angle","attract","center","decay","distance","direction","drift","enable","gravity","path","outModes","random","size","speed","spin","straight","trail","vibrate","warp","bounce","collisions","value","_","noise","outMode","default","out_mode","load","data","undefined","horizontal","vertical"],"sources":["/Users/mohammedhusain/myportfolio/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js"],"sourcesContent":["import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}