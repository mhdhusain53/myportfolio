{"ast":null,"code":"import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n  let drawn = false;\n  const {\n    begin,\n    end,\n    maxDistance,\n    context,\n    canvasSize,\n    width,\n    backgroundMask,\n    colorLine,\n    opacity,\n    links\n  } = params;\n\n  if (getDistance(begin, end) <= maxDistance) {\n    drawLine(context, begin, end);\n    drawn = true;\n  } else if (links.warp) {\n    let pi1;\n    let pi2;\n    const endNE = {\n      x: end.x - canvasSize.width,\n      y: end.y\n    };\n    const d1 = getDistances(begin, endNE);\n\n    if (d1.distance <= maxDistance) {\n      const yi = begin.y - d1.dy / d1.dx * begin.x;\n      pi1 = {\n        x: 0,\n        y: yi\n      };\n      pi2 = {\n        x: canvasSize.width,\n        y: yi\n      };\n    } else {\n      const endSW = {\n        x: end.x,\n        y: end.y - canvasSize.height\n      };\n      const d2 = getDistances(begin, endSW);\n\n      if (d2.distance <= maxDistance) {\n        const yi = begin.y - d2.dy / d2.dx * begin.x;\n        const xi = -yi / (d2.dy / d2.dx);\n        pi1 = {\n          x: xi,\n          y: 0\n        };\n        pi2 = {\n          x: xi,\n          y: canvasSize.height\n        };\n      } else {\n        const endSE = {\n          x: end.x - canvasSize.width,\n          y: end.y - canvasSize.height\n        };\n        const d3 = getDistances(begin, endSE);\n\n        if (d3.distance <= maxDistance) {\n          const yi = begin.y - d3.dy / d3.dx * begin.x;\n          const xi = -yi / (d3.dy / d3.dx);\n          pi1 = {\n            x: xi,\n            y: yi\n          };\n          pi2 = {\n            x: pi1.x + canvasSize.width,\n            y: pi1.y + canvasSize.height\n          };\n        }\n      }\n    }\n\n    if (pi1 && pi2) {\n      drawLine(context, begin, pi1);\n      drawLine(context, end, pi2);\n      drawn = true;\n    }\n  }\n\n  if (!drawn) {\n    return;\n  }\n\n  context.lineWidth = width;\n\n  if (backgroundMask.enable) {\n    context.globalCompositeOperation = backgroundMask.composite;\n  }\n\n  context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n  const {\n    shadow\n  } = links;\n\n  if (shadow.enable) {\n    const shadowColor = rangeColorToRgb(shadow.color);\n\n    if (shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = getStyleFromRgb(shadowColor);\n    }\n  }\n\n  context.stroke();\n}\nexport function drawLinkTriangle(params) {\n  const {\n    context,\n    pos1,\n    pos2,\n    pos3,\n    backgroundMask,\n    colorTriangle,\n    opacityTriangle\n  } = params;\n  drawTriangle(context, pos1, pos2, pos3);\n\n  if (backgroundMask.enable) {\n    context.globalCompositeOperation = backgroundMask.composite;\n  }\n\n  context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n  context.fill();\n}\nexport function getLinkKey(ids) {\n  ids.sort((a, b) => a - b);\n  return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n  const key = getLinkKey(particles.map(t => t.id));\n  let res = dictionary.get(key);\n\n  if (res === undefined) {\n    res = getRandom();\n    dictionary.set(key, res);\n  }\n\n  return res;\n}","map":{"version":3,"names":["drawLine","drawTriangle","getDistance","getDistances","getRandom","getStyleFromRgb","rangeColorToRgb","drawLinkLine","params","drawn","begin","end","maxDistance","context","canvasSize","width","backgroundMask","colorLine","opacity","links","warp","pi1","pi2","endNE","x","y","d1","distance","yi","dy","dx","endSW","height","d2","xi","endSE","d3","lineWidth","enable","globalCompositeOperation","composite","strokeStyle","shadow","shadowColor","color","shadowBlur","blur","stroke","drawLinkTriangle","pos1","pos2","pos3","colorTriangle","opacityTriangle","fillStyle","fill","getLinkKey","ids","sort","a","b","join","setLinkFrequency","particles","dictionary","key","map","t","id","res","get","undefined","set"],"sources":["/Users/mohammedhusain/myportfolio/node_modules/tsparticles-interaction-particles-links/esm/Utils.js"],"sourcesContent":["import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}