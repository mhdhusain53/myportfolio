{"ast":null,"code":"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\n\nfunction setTransformValue(factor, newFactor, key) {\n  const newValue = newFactor[key];\n\n  if (newValue !== undefined) {\n    factor[key] = (factor[key] ?? 1) * newValue;\n  }\n}\n\nexport class Canvas {\n  constructor(container) {\n    this.container = container;\n\n    this._applyPostDrawUpdaters = particle => {\n      for (const updater of this._postDrawUpdaters) {\n        updater.afterDraw && updater.afterDraw(particle);\n      }\n    };\n\n    this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n      for (const updater of this._preDrawUpdaters) {\n        if (updater.getColorStyles) {\n          const {\n            fill,\n            stroke\n          } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n\n          if (fill) {\n            colorStyles.fill = fill;\n          }\n\n          if (stroke) {\n            colorStyles.stroke = stroke;\n          }\n        }\n\n        if (updater.getTransformValues) {\n          const updaterTransform = updater.getTransformValues(particle);\n\n          for (const key in updaterTransform) {\n            setTransformValue(transform, updaterTransform, key);\n          }\n        }\n\n        updater.beforeDraw && updater.beforeDraw(particle);\n      }\n    };\n\n    this._applyResizePlugins = () => {\n      for (const plugin of this._resizePlugins) {\n        plugin.resize && plugin.resize();\n      }\n    };\n\n    this._getPluginParticleColors = particle => {\n      let fColor, sColor;\n\n      for (const plugin of this._colorPlugins) {\n        if (!fColor && plugin.particleFillColor) {\n          fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n        }\n\n        if (!sColor && plugin.particleStrokeColor) {\n          sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n        }\n\n        if (fColor && sColor) {\n          break;\n        }\n      }\n\n      return [fColor, sColor];\n    };\n\n    this._initCover = () => {\n      const options = this.container.actualOptions,\n            cover = options.backgroundMask.cover,\n            color = cover.color,\n            coverRgb = rangeColorToRgb(color);\n\n      if (coverRgb) {\n        const coverColor = { ...coverRgb,\n          a: cover.opacity\n        };\n        this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    };\n\n    this._initStyle = () => {\n      const element = this.element,\n            options = this.container.actualOptions;\n\n      if (!element) {\n        return;\n      }\n\n      if (this._fullScreen) {\n        this._originalStyle = deepExtend({}, element.style);\n\n        this._setFullScreenStyle();\n      } else {\n        this._resetOriginalStyle();\n      }\n\n      for (const key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n\n        const value = options.style[key];\n\n        if (!value) {\n          continue;\n        }\n\n        element.style.setProperty(key, value, \"important\");\n      }\n    };\n\n    this._initTrail = async () => {\n      const options = this.container.actualOptions,\n            trail = options.particles.move.trail,\n            trailFill = trail.fill;\n\n      if (!trail.enable) {\n        return;\n      }\n\n      if (trailFill.color) {\n        const fillColor = rangeColorToRgb(trailFill.color);\n\n        if (!fillColor) {\n          return;\n        }\n\n        const trail = options.particles.move.trail;\n        this._trailFill = {\n          color: { ...fillColor\n          },\n          opacity: 1 / trail.length\n        };\n      } else {\n        await new Promise((resolve, reject) => {\n          if (!trailFill.image) {\n            return;\n          }\n\n          const img = document.createElement(\"img\");\n          img.addEventListener(\"load\", () => {\n            this._trailFill = {\n              image: img,\n              opacity: 1 / trail.length\n            };\n            resolve();\n          });\n          img.addEventListener(\"error\", evt => {\n            reject(evt.error);\n          });\n          img.src = trailFill.image;\n        });\n      }\n    };\n\n    this._paintBase = baseColor => {\n      this.draw(ctx => paintBase(ctx, this.size, baseColor));\n    };\n\n    this._paintImage = (image, opacity) => {\n      this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n    };\n\n    this._repairStyle = () => {\n      const element = this.element;\n\n      if (!element) {\n        return;\n      }\n\n      this._safeMutationObserver(observer => observer.disconnect());\n\n      this._initStyle();\n\n      this.initBackground();\n\n      this._safeMutationObserver(observer => observer.observe(element, {\n        attributes: true\n      }));\n    };\n\n    this._resetOriginalStyle = () => {\n      const element = this.element,\n            originalStyle = this._originalStyle;\n\n      if (!(element && originalStyle)) {\n        return;\n      }\n\n      const style = element.style;\n      style.position = originalStyle.position;\n      style.zIndex = originalStyle.zIndex;\n      style.top = originalStyle.top;\n      style.left = originalStyle.left;\n      style.width = originalStyle.width;\n      style.height = originalStyle.height;\n    };\n\n    this._safeMutationObserver = callback => {\n      if (!this._mutationObserver) {\n        return;\n      }\n\n      callback(this._mutationObserver);\n    };\n\n    this._setFullScreenStyle = () => {\n      const element = this.element;\n\n      if (!element) {\n        return;\n      }\n\n      const priority = \"important\",\n            style = element.style;\n      style.setProperty(\"position\", \"fixed\", priority);\n      style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n      style.setProperty(\"top\", \"0\", priority);\n      style.setProperty(\"left\", \"0\", priority);\n      style.setProperty(\"width\", \"100%\", priority);\n      style.setProperty(\"height\", \"100%\", priority);\n    };\n\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n  }\n\n  get _fullScreen() {\n    return this.container.actualOptions.fullScreen.enable;\n  }\n\n  clear() {\n    const options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          trailFill = this._trailFill;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && trailFill) {\n      if (trailFill.color) {\n        this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n      } else if (trailFill.image) {\n        this._paintImage(trailFill.image, trailFill.opacity);\n      }\n    } else {\n      this.draw(ctx => {\n        clear(ctx, this.size);\n      });\n    }\n  }\n\n  destroy() {\n    this.stop();\n\n    if (this._generated) {\n      const element = this.element;\n      element && element.remove();\n    } else {\n      this._resetOriginalStyle();\n    }\n\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n  }\n\n  draw(cb) {\n    const ctx = this._context;\n\n    if (!ctx) {\n      return;\n    }\n\n    return cb(ctx);\n  }\n\n  drawParticle(particle, delta) {\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n\n    const radius = particle.getRadius();\n\n    if (radius <= 0) {\n      return;\n    }\n\n    const pfColor = particle.getFillColor(),\n          psColor = particle.getStrokeColor() ?? pfColor;\n\n    let [fColor, sColor] = this._getPluginParticleColors(particle);\n\n    if (!fColor) {\n      fColor = pfColor;\n    }\n\n    if (!sColor) {\n      sColor = psColor;\n    }\n\n    if (!fColor && !sColor) {\n      return;\n    }\n\n    this.draw(ctx => {\n      const container = this.container,\n            options = container.actualOptions,\n            zIndexOptions = particle.options.zIndex,\n            zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate,\n            opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1,\n            strokeOpacity = particle.strokeOpacity ?? opacity,\n            zOpacity = opacity * zOpacityFactor,\n            zStrokeOpacity = strokeOpacity * zOpacityFactor,\n            transform = {},\n            colorStyles = {\n        fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n      };\n      colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n\n      this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n\n      drawParticle({\n        container,\n        context: ctx,\n        particle,\n        delta,\n        colorStyles,\n        backgroundMask: options.backgroundMask.enable,\n        composite: options.backgroundMask.composite,\n        radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n        opacity: zOpacity,\n        shadow: particle.options.shadow,\n        transform\n      });\n\n      this._applyPostDrawUpdaters(particle);\n    });\n  }\n\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n  }\n\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => drawPlugin(ctx, plugin, delta));\n  }\n\n  async init() {\n    this._safeMutationObserver(obs => obs.disconnect());\n\n    this._mutationObserver = safeMutationObserver(records => {\n      for (const record of records) {\n        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n          this._repairStyle();\n        }\n      }\n    });\n    this.resize();\n\n    this._initStyle();\n\n    this._initCover();\n\n    try {\n      await this._initTrail();\n    } catch (e) {\n      getLogger().error(e);\n    }\n\n    this.initBackground();\n\n    this._safeMutationObserver(obs => {\n      if (!this.element) {\n        return;\n      }\n\n      obs.observe(this.element, {\n        attributes: true\n      });\n    });\n\n    this.initUpdaters();\n    this.initPlugins();\n    this.paint();\n  }\n\n  initBackground() {\n    const options = this.container.actualOptions,\n          background = options.background,\n          element = this.element;\n\n    if (!element) {\n      return;\n    }\n\n    const elementStyle = element.style;\n\n    if (!elementStyle) {\n      return;\n    }\n\n    if (background.color) {\n      const color = rangeColorToRgb(background.color);\n      elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n\n  initPlugins() {\n    this._resizePlugins = [];\n\n    for (const [, plugin] of this.container.plugins) {\n      if (plugin.resize) {\n        this._resizePlugins.push(plugin);\n      }\n\n      if (plugin.particleFillColor || plugin.particleStrokeColor) {\n        this._colorPlugins.push(plugin);\n      }\n    }\n  }\n\n  initUpdaters() {\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n\n    for (const updater of this.container.particles.updaters) {\n      if (updater.afterDraw) {\n        this._postDrawUpdaters.push(updater);\n      }\n\n      if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n        this._preDrawUpdaters.push(updater);\n      }\n    }\n  }\n\n  loadCanvas(canvas) {\n    if (this._generated && this.element) {\n      this.element.remove();\n    }\n\n    this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n    this.element = canvas;\n    this.element.ariaHidden = \"true\";\n    this._originalStyle = deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this._context = this.element.getContext(\"2d\");\n\n    this._safeMutationObserver(obs => {\n      if (!this.element) {\n        return;\n      }\n\n      obs.observe(this.element, {\n        attributes: true\n      });\n    });\n\n    this.container.retina.init();\n    this.initBackground();\n  }\n\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        clear(ctx, this.size);\n\n        this._paintBase(this._coverColorStyle);\n      } else {\n        this._paintBase();\n      }\n    });\n  }\n\n  resize() {\n    if (!this.element) {\n      return false;\n    }\n\n    const container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n      width: this.element.offsetWidth * pxRatio,\n      height: this.element.offsetHeight * pxRatio\n    };\n\n    if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n      return false;\n    }\n\n    const oldSize = { ...size\n    };\n    this.element.width = size.width = this.element.offsetWidth * pxRatio;\n    this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n\n    return true;\n  }\n\n  stop() {\n    this._safeMutationObserver(obs => obs.disconnect());\n\n    this._mutationObserver = undefined;\n    this.draw(ctx => clear(ctx, this.size));\n  }\n\n  async windowResize() {\n    if (!this.element || !this.resize()) {\n      return;\n    }\n\n    const container = this.container,\n          needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n\n    this._applyResizePlugins();\n\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n\n}","map":{"version":3,"names":["clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","paintImage","deepExtend","getLogger","safeMutationObserver","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","generatedAttribute","setTransformValue","factor","newFactor","key","newValue","undefined","Canvas","constructor","container","_applyPostDrawUpdaters","particle","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","options","actualOptions","cover","backgroundMask","color","coverRgb","coverColor","a","opacity","_coverColorStyle","_initStyle","element","_fullScreen","_originalStyle","style","_setFullScreenStyle","_resetOriginalStyle","value","setProperty","_initTrail","trail","particles","move","trailFill","enable","fillColor","_trailFill","length","Promise","resolve","reject","image","img","document","createElement","addEventListener","evt","error","src","_paintBase","baseColor","draw","size","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","position","zIndex","top","left","width","height","callback","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","destroy","stop","remove","cb","delta","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","strokeOpacity","zStrokeOpacity","context","composite","sizeRate","shadow","init","obs","records","record","type","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","retina","pxRatio","pixelRatio","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh"],"sources":["/Users/mohammedhusain/myportfolio/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}