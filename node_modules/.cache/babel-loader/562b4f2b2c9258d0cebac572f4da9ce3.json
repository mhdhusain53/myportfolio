{"ast":null,"code":"export class EventDispatcher {\n  constructor() {\n    this._listeners = new Map();\n  }\n\n  addEventListener(type, listener) {\n    this.removeEventListener(type, listener);\n\n    let arr = this._listeners.get(type);\n\n    if (!arr) {\n      arr = [];\n\n      this._listeners.set(type, arr);\n    }\n\n    arr.push(listener);\n  }\n\n  dispatchEvent(type, args) {\n    const listeners = this._listeners.get(type);\n\n    listeners && listeners.forEach(handler => handler(args));\n  }\n\n  hasEventListener(type) {\n    return !!this._listeners.get(type);\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) {\n      this._listeners = new Map();\n    } else {\n      this._listeners.delete(type);\n    }\n  }\n\n  removeEventListener(type, listener) {\n    const arr = this._listeners.get(type);\n\n    if (!arr) {\n      return;\n    }\n\n    const length = arr.length,\n          idx = arr.indexOf(listener);\n\n    if (idx < 0) {\n      return;\n    }\n\n    if (length === 1) {\n      this._listeners.delete(type);\n    } else {\n      arr.splice(idx, 1);\n    }\n  }\n\n}","map":{"version":3,"names":["EventDispatcher","constructor","_listeners","Map","addEventListener","type","listener","removeEventListener","arr","get","set","push","dispatchEvent","args","listeners","forEach","handler","hasEventListener","removeAllEventListeners","delete","length","idx","indexOf","splice"],"sources":["/Users/mohammedhusain/myportfolio/node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js"],"sourcesContent":["export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,eAAN,CAAsB;EACzBC,WAAW,GAAG;IACV,KAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;EACH;;EACDC,gBAAgB,CAACC,IAAD,EAAOC,QAAP,EAAiB;IAC7B,KAAKC,mBAAL,CAAyBF,IAAzB,EAA+BC,QAA/B;;IACA,IAAIE,GAAG,GAAG,KAAKN,UAAL,CAAgBO,GAAhB,CAAoBJ,IAApB,CAAV;;IACA,IAAI,CAACG,GAAL,EAAU;MACNA,GAAG,GAAG,EAAN;;MACA,KAAKN,UAAL,CAAgBQ,GAAhB,CAAoBL,IAApB,EAA0BG,GAA1B;IACH;;IACDA,GAAG,CAACG,IAAJ,CAASL,QAAT;EACH;;EACDM,aAAa,CAACP,IAAD,EAAOQ,IAAP,EAAa;IACtB,MAAMC,SAAS,GAAG,KAAKZ,UAAL,CAAgBO,GAAhB,CAAoBJ,IAApB,CAAlB;;IACAS,SAAS,IAAIA,SAAS,CAACC,OAAV,CAAmBC,OAAD,IAAaA,OAAO,CAACH,IAAD,CAAtC,CAAb;EACH;;EACDI,gBAAgB,CAACZ,IAAD,EAAO;IACnB,OAAO,CAAC,CAAC,KAAKH,UAAL,CAAgBO,GAAhB,CAAoBJ,IAApB,CAAT;EACH;;EACDa,uBAAuB,CAACb,IAAD,EAAO;IAC1B,IAAI,CAACA,IAAL,EAAW;MACP,KAAKH,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;IACH,CAFD,MAGK;MACD,KAAKD,UAAL,CAAgBiB,MAAhB,CAAuBd,IAAvB;IACH;EACJ;;EACDE,mBAAmB,CAACF,IAAD,EAAOC,QAAP,EAAiB;IAChC,MAAME,GAAG,GAAG,KAAKN,UAAL,CAAgBO,GAAhB,CAAoBJ,IAApB,CAAZ;;IACA,IAAI,CAACG,GAAL,EAAU;MACN;IACH;;IACD,MAAMY,MAAM,GAAGZ,GAAG,CAACY,MAAnB;IAAA,MAA2BC,GAAG,GAAGb,GAAG,CAACc,OAAJ,CAAYhB,QAAZ,CAAjC;;IACA,IAAIe,GAAG,GAAG,CAAV,EAAa;MACT;IACH;;IACD,IAAID,MAAM,KAAK,CAAf,EAAkB;MACd,KAAKlB,UAAL,CAAgBiB,MAAhB,CAAuBd,IAAvB;IACH,CAFD,MAGK;MACDG,GAAG,CAACe,MAAJ,CAAWF,GAAX,EAAgB,CAAhB;IACH;EACJ;;AA3CwB"},"metadata":{},"sourceType":"module"}