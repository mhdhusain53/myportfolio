{"ast":null,"code":"import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\n\nasync function getDataFromUrl(data) {\n  const url = itemFromSingleOrMultiple(data.url, data.index);\n\n  if (!url) {\n    return data.fallback;\n  }\n\n  const response = await fetch(url);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n  return data.fallback;\n}\n\nfunction isParamsEmpty(params) {\n  return !params.id && !params.element && !params.url && !params.options;\n}\n\nfunction isParams(obj) {\n  return !isParamsEmpty(obj);\n}\n\nexport class Engine {\n  constructor() {\n    this._configs = new Map();\n    this._domArray = [];\n    this._eventDispatcher = new EventDispatcher();\n    this._initialized = false;\n    this.plugins = new Plugins(this);\n  }\n\n  get configs() {\n    const res = {};\n\n    for (const [name, config] of this._configs) {\n      res[name] = config;\n    }\n\n    return res;\n  }\n\n  get version() {\n    return \"2.12.0\";\n  }\n\n  addConfig(nameOrConfig, config) {\n    if (isString(nameOrConfig)) {\n      if (config) {\n        config.name = nameOrConfig;\n\n        this._configs.set(nameOrConfig, config);\n      }\n    } else {\n      this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n    }\n  }\n\n  addEventListener(type, listener) {\n    this._eventDispatcher.addEventListener(type, listener);\n  }\n\n  async addInteractor(name, interactorInitializer) {\n    let refresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.plugins.addInteractor(name, interactorInitializer);\n    await this.refresh(refresh);\n  }\n\n  async addMover(name, moverInitializer) {\n    let refresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.plugins.addParticleMover(name, moverInitializer);\n    await this.refresh(refresh);\n  }\n\n  async addParticleUpdater(name, updaterInitializer) {\n    let refresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.plugins.addParticleUpdater(name, updaterInitializer);\n    await this.refresh(refresh);\n  }\n\n  async addPathGenerator(name, generator) {\n    let refresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.plugins.addPathGenerator(name, generator);\n    await this.refresh(refresh);\n  }\n\n  async addPlugin(plugin) {\n    let refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.plugins.addPlugin(plugin);\n    await this.refresh(refresh);\n  }\n\n  async addPreset(preset, options) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let refresh = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    this.plugins.addPreset(preset, options, override);\n    await this.refresh(refresh);\n  }\n\n  async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh) {\n    let refresh = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    let customDrawer;\n    let realRefresh = refresh,\n        realInit,\n        realAfterEffect,\n        realDestroy;\n\n    if (isBoolean(initOrRefresh)) {\n      realRefresh = initOrRefresh;\n      realInit = undefined;\n    } else {\n      realInit = initOrRefresh;\n    }\n\n    if (isBoolean(afterEffectOrRefresh)) {\n      realRefresh = afterEffectOrRefresh;\n      realAfterEffect = undefined;\n    } else {\n      realAfterEffect = afterEffectOrRefresh;\n    }\n\n    if (isBoolean(destroyOrRefresh)) {\n      realRefresh = destroyOrRefresh;\n      realDestroy = undefined;\n    } else {\n      realDestroy = destroyOrRefresh;\n    }\n\n    if (isFunction(drawer)) {\n      customDrawer = {\n        afterEffect: realAfterEffect,\n        destroy: realDestroy,\n        draw: drawer,\n        init: realInit\n      };\n    } else {\n      customDrawer = drawer;\n    }\n\n    this.plugins.addShapeDrawer(shape, customDrawer);\n    await this.refresh(realRefresh);\n  }\n\n  dispatchEvent(type, args) {\n    this._eventDispatcher.dispatchEvent(type, args);\n  }\n\n  dom() {\n    return this._domArray;\n  }\n\n  domItem(index) {\n    const dom = this.dom(),\n          item = dom[index];\n\n    if (!item || item.destroyed) {\n      dom.splice(index, 1);\n      return;\n    }\n\n    return item;\n  }\n\n  init() {\n    if (this._initialized) {\n      return;\n    }\n\n    this._initialized = true;\n  }\n\n  async load(tagIdOrOptionsOrParams, options) {\n    return this.loadFromArray(tagIdOrOptionsOrParams, options);\n  }\n\n  async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n    let params;\n\n    if (!isParams(tagIdOrOptionsOrParams)) {\n      params = {};\n\n      if (isString(tagIdOrOptionsOrParams)) {\n        params.id = tagIdOrOptionsOrParams;\n      } else {\n        params.options = tagIdOrOptionsOrParams;\n      }\n\n      if (isNumber(optionsOrIndex)) {\n        params.index = optionsOrIndex;\n      } else {\n        params.options = optionsOrIndex ?? params.options;\n      }\n\n      params.index = index ?? params.index;\n    } else {\n      params = tagIdOrOptionsOrParams;\n    }\n\n    return this._loadParams(params);\n  }\n\n  async loadJSON(tagId, pathConfigJson, index) {\n    let url, id;\n\n    if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = pathConfigJson;\n    }\n\n    return this._loadParams({\n      id: id,\n      url,\n      index\n    });\n  }\n\n  async refresh() {\n    let refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (!refresh) {\n      return;\n    }\n\n    this.dom().forEach(t => t.refresh());\n  }\n\n  removeEventListener(type, listener) {\n    this._eventDispatcher.removeEventListener(type, listener);\n  }\n\n  async set(id, element, options, index) {\n    const params = {\n      index\n    };\n\n    if (isString(id)) {\n      params.id = id;\n    } else {\n      params.element = id;\n    }\n\n    if (element instanceof HTMLElement) {\n      params.element = element;\n    } else {\n      params.options = element;\n    }\n\n    if (isNumber(options)) {\n      params.index = options;\n    } else {\n      params.options = options ?? params.options;\n    }\n\n    return this._loadParams(params);\n  }\n\n  async setJSON(id, element, pathConfigJson, index) {\n    const params = {};\n\n    if (id instanceof HTMLElement) {\n      params.element = id;\n      params.url = element;\n      params.index = pathConfigJson;\n    } else {\n      params.id = id;\n      params.element = element;\n      params.url = pathConfigJson;\n      params.index = index;\n    }\n\n    return this._loadParams(params);\n  }\n\n  setOnClickHandler(callback) {\n    const dom = this.dom();\n\n    if (!dom.length) {\n      throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n    }\n\n    for (const domItem of dom) {\n      domItem.addClickHandler(callback);\n    }\n  }\n\n  async _loadParams(params) {\n    const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`,\n          {\n      index,\n      url\n    } = params,\n          options = url ? await getDataFromUrl({\n      fallback: params.options,\n      url,\n      index\n    }) : params.options;\n    let domContainer = params.element ?? document.getElementById(id);\n\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = id;\n      document.body.append(domContainer);\n    }\n\n    const currentOptions = itemFromSingleOrMultiple(options, index),\n          dom = this.dom(),\n          oldIndex = dom.findIndex(v => v.id === id);\n\n    if (oldIndex >= 0) {\n      const old = this.domItem(oldIndex);\n\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n\n    let canvasEl;\n\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      canvasEl.dataset[generatedAttribute] = \"false\";\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        canvasEl.dataset[generatedAttribute] = \"false\";\n      } else {\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.dataset[generatedAttribute] = \"true\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n\n    if (!canvasEl.style.width) {\n      canvasEl.style.width = \"100%\";\n    }\n\n    if (!canvasEl.style.height) {\n      canvasEl.style.height = \"100%\";\n    }\n\n    const newItem = new Container(this, id, currentOptions);\n\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n\n}","map":{"version":3,"names":["errorPrefix","generatedAttribute","getLogger","isBoolean","isFunction","isNumber","isString","itemFromSingleOrMultiple","Container","EventDispatcher","Plugins","getRandom","getDataFromUrl","data","url","index","fallback","response","fetch","ok","json","error","status","isParamsEmpty","params","id","element","options","isParams","obj","Engine","constructor","_configs","Map","_domArray","_eventDispatcher","_initialized","plugins","configs","res","name","config","version","addConfig","nameOrConfig","set","addEventListener","type","listener","addInteractor","interactorInitializer","refresh","addMover","moverInitializer","addParticleMover","addParticleUpdater","updaterInitializer","addPathGenerator","generator","addPlugin","plugin","addPreset","preset","override","addShape","shape","drawer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realRefresh","realInit","realAfterEffect","realDestroy","undefined","afterEffect","destroy","draw","init","addShapeDrawer","dispatchEvent","args","dom","domItem","item","destroyed","splice","load","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","_loadParams","loadJSON","tagId","pathConfigJson","forEach","t","removeEventListener","HTMLElement","setJSON","setOnClickHandler","callback","length","Error","addClickHandler","Math","floor","domContainer","document","getElementById","createElement","body","append","currentOptions","oldIndex","findIndex","v","old","canvasEl","tagName","toLowerCase","dataset","existingCanvases","getElementsByTagName","appendChild","style","width","height","newItem","push","canvas","loadCanvas","start"],"sources":["/Users/mohammedhusain/myportfolio/node_modules/tsparticles-engine/esm/Core/Engine.js"],"sourcesContent":["import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,kBAAtB,QAAgD,mBAAhD;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,QAArD,EAA+DC,wBAA/D,QAA+F,gBAA/F;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AACA,eAAeC,cAAf,CAA8BC,IAA9B,EAAoC;EAChC,MAAMC,GAAG,GAAGP,wBAAwB,CAACM,IAAI,CAACC,GAAN,EAAWD,IAAI,CAACE,KAAhB,CAApC;;EACA,IAAI,CAACD,GAAL,EAAU;IACN,OAAOD,IAAI,CAACG,QAAZ;EACH;;EACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA5B;;EACA,IAAIG,QAAQ,CAACE,EAAb,EAAiB;IACb,OAAOF,QAAQ,CAACG,IAAT,EAAP;EACH;;EACDlB,SAAS,GAAGmB,KAAZ,CAAmB,GAAErB,WAAY,IAAGiB,QAAQ,CAACK,MAAO,+BAApD;EACA,OAAOT,IAAI,CAACG,QAAZ;AACH;;AACD,SAASO,aAAT,CAAuBC,MAAvB,EAA+B;EAC3B,OAAO,CAACA,MAAM,CAACC,EAAR,IAAc,CAACD,MAAM,CAACE,OAAtB,IAAiC,CAACF,MAAM,CAACV,GAAzC,IAAgD,CAACU,MAAM,CAACG,OAA/D;AACH;;AACD,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;EACnB,OAAO,CAACN,aAAa,CAACM,GAAD,CAArB;AACH;;AACD,OAAO,MAAMC,MAAN,CAAa;EAChBC,WAAW,GAAG;IACV,KAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,gBAAL,GAAwB,IAAI1B,eAAJ,EAAxB;IACA,KAAK2B,YAAL,GAAoB,KAApB;IACA,KAAKC,OAAL,GAAe,IAAI3B,OAAJ,CAAY,IAAZ,CAAf;EACH;;EACU,IAAP4B,OAAO,GAAG;IACV,MAAMC,GAAG,GAAG,EAAZ;;IACA,KAAK,MAAM,CAACC,IAAD,EAAOC,MAAP,CAAX,IAA6B,KAAKT,QAAlC,EAA4C;MACxCO,GAAG,CAACC,IAAD,CAAH,GAAYC,MAAZ;IACH;;IACD,OAAOF,GAAP;EACH;;EACU,IAAPG,OAAO,GAAG;IACV,OAAO,QAAP;EACH;;EACDC,SAAS,CAACC,YAAD,EAAeH,MAAf,EAAuB;IAC5B,IAAInC,QAAQ,CAACsC,YAAD,CAAZ,EAA4B;MACxB,IAAIH,MAAJ,EAAY;QACRA,MAAM,CAACD,IAAP,GAAcI,YAAd;;QACA,KAAKZ,QAAL,CAAca,GAAd,CAAkBD,YAAlB,EAAgCH,MAAhC;MACH;IACJ,CALD,MAMK;MACD,KAAKT,QAAL,CAAca,GAAd,CAAkBD,YAAY,CAACJ,IAAb,IAAqB,SAAvC,EAAkDI,YAAlD;IACH;EACJ;;EACDE,gBAAgB,CAACC,IAAD,EAAOC,QAAP,EAAiB;IAC7B,KAAKb,gBAAL,CAAsBW,gBAAtB,CAAuCC,IAAvC,EAA6CC,QAA7C;EACH;;EACkB,MAAbC,aAAa,CAACT,IAAD,EAAOU,qBAAP,EAA8C;IAAA,IAAhBC,OAAgB,uEAAN,IAAM;IAC7D,KAAKd,OAAL,CAAaY,aAAb,CAA2BT,IAA3B,EAAiCU,qBAAjC;IACA,MAAM,KAAKC,OAAL,CAAaA,OAAb,CAAN;EACH;;EACa,MAARC,QAAQ,CAACZ,IAAD,EAAOa,gBAAP,EAAyC;IAAA,IAAhBF,OAAgB,uEAAN,IAAM;IACnD,KAAKd,OAAL,CAAaiB,gBAAb,CAA8Bd,IAA9B,EAAoCa,gBAApC;IACA,MAAM,KAAKF,OAAL,CAAaA,OAAb,CAAN;EACH;;EACuB,MAAlBI,kBAAkB,CAACf,IAAD,EAAOgB,kBAAP,EAA2C;IAAA,IAAhBL,OAAgB,uEAAN,IAAM;IAC/D,KAAKd,OAAL,CAAakB,kBAAb,CAAgCf,IAAhC,EAAsCgB,kBAAtC;IACA,MAAM,KAAKL,OAAL,CAAaA,OAAb,CAAN;EACH;;EACqB,MAAhBM,gBAAgB,CAACjB,IAAD,EAAOkB,SAAP,EAAkC;IAAA,IAAhBP,OAAgB,uEAAN,IAAM;IACpD,KAAKd,OAAL,CAAaoB,gBAAb,CAA8BjB,IAA9B,EAAoCkB,SAApC;IACA,MAAM,KAAKP,OAAL,CAAaA,OAAb,CAAN;EACH;;EACc,MAATQ,SAAS,CAACC,MAAD,EAAyB;IAAA,IAAhBT,OAAgB,uEAAN,IAAM;IACpC,KAAKd,OAAL,CAAasB,SAAb,CAAuBC,MAAvB;IACA,MAAM,KAAKT,OAAL,CAAaA,OAAb,CAAN;EACH;;EACc,MAATU,SAAS,CAACC,MAAD,EAASnC,OAAT,EAAoD;IAAA,IAAlCoC,QAAkC,uEAAvB,KAAuB;IAAA,IAAhBZ,OAAgB,uEAAN,IAAM;IAC/D,KAAKd,OAAL,CAAawB,SAAb,CAAuBC,MAAvB,EAA+BnC,OAA/B,EAAwCoC,QAAxC;IACA,MAAM,KAAKZ,OAAL,CAAaA,OAAb,CAAN;EACH;;EACa,MAARa,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgBC,aAAhB,EAA+BC,oBAA/B,EAAqDC,gBAArD,EAAuF;IAAA,IAAhBlB,OAAgB,uEAAN,IAAM;IACjG,IAAImB,YAAJ;IACA,IAAIC,WAAW,GAAGpB,OAAlB;IAAA,IAA2BqB,QAA3B;IAAA,IAAqCC,eAArC;IAAA,IAAsDC,WAAtD;;IACA,IAAIvE,SAAS,CAACgE,aAAD,CAAb,EAA8B;MAC1BI,WAAW,GAAGJ,aAAd;MACAK,QAAQ,GAAGG,SAAX;IACH,CAHD,MAIK;MACDH,QAAQ,GAAGL,aAAX;IACH;;IACD,IAAIhE,SAAS,CAACiE,oBAAD,CAAb,EAAqC;MACjCG,WAAW,GAAGH,oBAAd;MACAK,eAAe,GAAGE,SAAlB;IACH,CAHD,MAIK;MACDF,eAAe,GAAGL,oBAAlB;IACH;;IACD,IAAIjE,SAAS,CAACkE,gBAAD,CAAb,EAAiC;MAC7BE,WAAW,GAAGF,gBAAd;MACAK,WAAW,GAAGC,SAAd;IACH,CAHD,MAIK;MACDD,WAAW,GAAGL,gBAAd;IACH;;IACD,IAAIjE,UAAU,CAAC8D,MAAD,CAAd,EAAwB;MACpBI,YAAY,GAAG;QACXM,WAAW,EAAEH,eADF;QAEXI,OAAO,EAAEH,WAFE;QAGXI,IAAI,EAAEZ,MAHK;QAIXa,IAAI,EAAEP;MAJK,CAAf;IAMH,CAPD,MAQK;MACDF,YAAY,GAAGJ,MAAf;IACH;;IACD,KAAK7B,OAAL,CAAa2C,cAAb,CAA4Bf,KAA5B,EAAmCK,YAAnC;IACA,MAAM,KAAKnB,OAAL,CAAaoB,WAAb,CAAN;EACH;;EACDU,aAAa,CAAClC,IAAD,EAAOmC,IAAP,EAAa;IACtB,KAAK/C,gBAAL,CAAsB8C,aAAtB,CAAoClC,IAApC,EAA0CmC,IAA1C;EACH;;EACDC,GAAG,GAAG;IACF,OAAO,KAAKjD,SAAZ;EACH;;EACDkD,OAAO,CAACrE,KAAD,EAAQ;IACX,MAAMoE,GAAG,GAAG,KAAKA,GAAL,EAAZ;IAAA,MAAwBE,IAAI,GAAGF,GAAG,CAACpE,KAAD,CAAlC;;IACA,IAAI,CAACsE,IAAD,IAASA,IAAI,CAACC,SAAlB,EAA6B;MACzBH,GAAG,CAACI,MAAJ,CAAWxE,KAAX,EAAkB,CAAlB;MACA;IACH;;IACD,OAAOsE,IAAP;EACH;;EACDN,IAAI,GAAG;IACH,IAAI,KAAK3C,YAAT,EAAuB;MACnB;IACH;;IACD,KAAKA,YAAL,GAAoB,IAApB;EACH;;EACS,MAAJoD,IAAI,CAACC,sBAAD,EAAyB9D,OAAzB,EAAkC;IACxC,OAAO,KAAK+D,aAAL,CAAmBD,sBAAnB,EAA2C9D,OAA3C,CAAP;EACH;;EACkB,MAAb+D,aAAa,CAACD,sBAAD,EAAyBE,cAAzB,EAAyC5E,KAAzC,EAAgD;IAC/D,IAAIS,MAAJ;;IACA,IAAI,CAACI,QAAQ,CAAC6D,sBAAD,CAAb,EAAuC;MACnCjE,MAAM,GAAG,EAAT;;MACA,IAAIlB,QAAQ,CAACmF,sBAAD,CAAZ,EAAsC;QAClCjE,MAAM,CAACC,EAAP,GAAYgE,sBAAZ;MACH,CAFD,MAGK;QACDjE,MAAM,CAACG,OAAP,GAAiB8D,sBAAjB;MACH;;MACD,IAAIpF,QAAQ,CAACsF,cAAD,CAAZ,EAA8B;QAC1BnE,MAAM,CAACT,KAAP,GAAe4E,cAAf;MACH,CAFD,MAGK;QACDnE,MAAM,CAACG,OAAP,GAAiBgE,cAAc,IAAInE,MAAM,CAACG,OAA1C;MACH;;MACDH,MAAM,CAACT,KAAP,GAAeA,KAAK,IAAIS,MAAM,CAACT,KAA/B;IACH,CAfD,MAgBK;MACDS,MAAM,GAAGiE,sBAAT;IACH;;IACD,OAAO,KAAKG,WAAL,CAAiBpE,MAAjB,CAAP;EACH;;EACa,MAARqE,QAAQ,CAACC,KAAD,EAAQC,cAAR,EAAwBhF,KAAxB,EAA+B;IACzC,IAAID,GAAJ,EAASW,EAAT;;IACA,IAAIpB,QAAQ,CAAC0F,cAAD,CAAR,IAA4BA,cAAc,KAAKpB,SAAnD,EAA8D;MAC1D7D,GAAG,GAAGgF,KAAN;IACH,CAFD,MAGK;MACDrE,EAAE,GAAGqE,KAAL;MACAhF,GAAG,GAAGiF,cAAN;IACH;;IACD,OAAO,KAAKH,WAAL,CAAiB;MAAEnE,EAAE,EAAEA,EAAN;MAAUX,GAAV;MAAeC;IAAf,CAAjB,CAAP;EACH;;EACY,MAAPoC,OAAO,GAAiB;IAAA,IAAhBA,OAAgB,uEAAN,IAAM;;IAC1B,IAAI,CAACA,OAAL,EAAc;MACV;IACH;;IACD,KAAKgC,GAAL,GAAWa,OAAX,CAAoBC,CAAD,IAAOA,CAAC,CAAC9C,OAAF,EAA1B;EACH;;EACD+C,mBAAmB,CAACnD,IAAD,EAAOC,QAAP,EAAiB;IAChC,KAAKb,gBAAL,CAAsB+D,mBAAtB,CAA0CnD,IAA1C,EAAgDC,QAAhD;EACH;;EACQ,MAAHH,GAAG,CAACpB,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuBZ,KAAvB,EAA8B;IACnC,MAAMS,MAAM,GAAG;MAAET;IAAF,CAAf;;IACA,IAAIT,QAAQ,CAACmB,EAAD,CAAZ,EAAkB;MACdD,MAAM,CAACC,EAAP,GAAYA,EAAZ;IACH,CAFD,MAGK;MACDD,MAAM,CAACE,OAAP,GAAiBD,EAAjB;IACH;;IACD,IAAIC,OAAO,YAAYyE,WAAvB,EAAoC;MAChC3E,MAAM,CAACE,OAAP,GAAiBA,OAAjB;IACH,CAFD,MAGK;MACDF,MAAM,CAACG,OAAP,GAAiBD,OAAjB;IACH;;IACD,IAAIrB,QAAQ,CAACsB,OAAD,CAAZ,EAAuB;MACnBH,MAAM,CAACT,KAAP,GAAeY,OAAf;IACH,CAFD,MAGK;MACDH,MAAM,CAACG,OAAP,GAAiBA,OAAO,IAAIH,MAAM,CAACG,OAAnC;IACH;;IACD,OAAO,KAAKiE,WAAL,CAAiBpE,MAAjB,CAAP;EACH;;EACY,MAAP4E,OAAO,CAAC3E,EAAD,EAAKC,OAAL,EAAcqE,cAAd,EAA8BhF,KAA9B,EAAqC;IAC9C,MAAMS,MAAM,GAAG,EAAf;;IACA,IAAIC,EAAE,YAAY0E,WAAlB,EAA+B;MAC3B3E,MAAM,CAACE,OAAP,GAAiBD,EAAjB;MACAD,MAAM,CAACV,GAAP,GAAaY,OAAb;MACAF,MAAM,CAACT,KAAP,GAAegF,cAAf;IACH,CAJD,MAKK;MACDvE,MAAM,CAACC,EAAP,GAAYA,EAAZ;MACAD,MAAM,CAACE,OAAP,GAAiBA,OAAjB;MACAF,MAAM,CAACV,GAAP,GAAaiF,cAAb;MACAvE,MAAM,CAACT,KAAP,GAAeA,KAAf;IACH;;IACD,OAAO,KAAK6E,WAAL,CAAiBpE,MAAjB,CAAP;EACH;;EACD6E,iBAAiB,CAACC,QAAD,EAAW;IACxB,MAAMnB,GAAG,GAAG,KAAKA,GAAL,EAAZ;;IACA,IAAI,CAACA,GAAG,CAACoB,MAAT,EAAiB;MACb,MAAM,IAAIC,KAAJ,CAAW,GAAExG,WAAY,+DAAzB,CAAN;IACH;;IACD,KAAK,MAAMoF,OAAX,IAAsBD,GAAtB,EAA2B;MACvBC,OAAO,CAACqB,eAAR,CAAwBH,QAAxB;IACH;EACJ;;EACgB,MAAXV,WAAW,CAACpE,MAAD,EAAS;IACtB,MAAMC,EAAE,GAAGD,MAAM,CAACC,EAAP,IAAc,cAAaiF,IAAI,CAACC,KAAL,CAAWhG,SAAS,KAAK,KAAzB,CAAgC,EAAtE;IAAA,MAAyE;MAAEI,KAAF;MAASD;IAAT,IAAiBU,MAA1F;IAAA,MAAkGG,OAAO,GAAGb,GAAG,GAAG,MAAMF,cAAc,CAAC;MAAEI,QAAQ,EAAEQ,MAAM,CAACG,OAAnB;MAA4Bb,GAA5B;MAAiCC;IAAjC,CAAD,CAAvB,GAAoES,MAAM,CAACG,OAA1L;IACA,IAAIiF,YAAY,GAAGpF,MAAM,CAACE,OAAP,IAAkBmF,QAAQ,CAACC,cAAT,CAAwBrF,EAAxB,CAArC;;IACA,IAAI,CAACmF,YAAL,EAAmB;MACfA,YAAY,GAAGC,QAAQ,CAACE,aAAT,CAAuB,KAAvB,CAAf;MACAH,YAAY,CAACnF,EAAb,GAAkBA,EAAlB;MACAoF,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBL,YAArB;IACH;;IACD,MAAMM,cAAc,GAAG3G,wBAAwB,CAACoB,OAAD,EAAUZ,KAAV,CAA/C;IAAA,MAAiEoE,GAAG,GAAG,KAAKA,GAAL,EAAvE;IAAA,MAAmFgC,QAAQ,GAAGhC,GAAG,CAACiC,SAAJ,CAAeC,CAAD,IAAOA,CAAC,CAAC5F,EAAF,KAASA,EAA9B,CAA9F;;IACA,IAAI0F,QAAQ,IAAI,CAAhB,EAAmB;MACf,MAAMG,GAAG,GAAG,KAAKlC,OAAL,CAAa+B,QAAb,CAAZ;;MACA,IAAIG,GAAG,IAAI,CAACA,GAAG,CAAChC,SAAhB,EAA2B;QACvBgC,GAAG,CAACzC,OAAJ;QACAM,GAAG,CAACI,MAAJ,CAAW4B,QAAX,EAAqB,CAArB;MACH;IACJ;;IACD,IAAII,QAAJ;;IACA,IAAIX,YAAY,CAACY,OAAb,CAAqBC,WAArB,OAAuC,QAA3C,EAAqD;MACjDF,QAAQ,GAAGX,YAAX;MACAW,QAAQ,CAACG,OAAT,CAAiBzH,kBAAjB,IAAuC,OAAvC;IACH,CAHD,MAIK;MACD,MAAM0H,gBAAgB,GAAGf,YAAY,CAACgB,oBAAb,CAAkC,QAAlC,CAAzB;;MACA,IAAID,gBAAgB,CAACpB,MAArB,EAA6B;QACzBgB,QAAQ,GAAGI,gBAAgB,CAAC,CAAD,CAA3B;QACAJ,QAAQ,CAACG,OAAT,CAAiBzH,kBAAjB,IAAuC,OAAvC;MACH,CAHD,MAIK;QACDsH,QAAQ,GAAGV,QAAQ,CAACE,aAAT,CAAuB,QAAvB,CAAX;QACAQ,QAAQ,CAACG,OAAT,CAAiBzH,kBAAjB,IAAuC,MAAvC;QACA2G,YAAY,CAACiB,WAAb,CAAyBN,QAAzB;MACH;IACJ;;IACD,IAAI,CAACA,QAAQ,CAACO,KAAT,CAAeC,KAApB,EAA2B;MACvBR,QAAQ,CAACO,KAAT,CAAeC,KAAf,GAAuB,MAAvB;IACH;;IACD,IAAI,CAACR,QAAQ,CAACO,KAAT,CAAeE,MAApB,EAA4B;MACxBT,QAAQ,CAACO,KAAT,CAAeE,MAAf,GAAwB,MAAxB;IACH;;IACD,MAAMC,OAAO,GAAG,IAAIzH,SAAJ,CAAc,IAAd,EAAoBiB,EAApB,EAAwByF,cAAxB,CAAhB;;IACA,IAAIC,QAAQ,IAAI,CAAhB,EAAmB;MACfhC,GAAG,CAACI,MAAJ,CAAW4B,QAAX,EAAqB,CAArB,EAAwBc,OAAxB;IACH,CAFD,MAGK;MACD9C,GAAG,CAAC+C,IAAJ,CAASD,OAAT;IACH;;IACDA,OAAO,CAACE,MAAR,CAAeC,UAAf,CAA0Bb,QAA1B;IACA,MAAMU,OAAO,CAACI,KAAR,EAAN;IACA,OAAOJ,OAAP;EACH;;AA/Pe"},"metadata":{},"sourceType":"module"}