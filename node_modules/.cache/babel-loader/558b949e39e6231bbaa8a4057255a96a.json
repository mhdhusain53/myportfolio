{"ast":null,"code":"import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\n\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\n\nfunction initDelta(value) {\n  let fpsLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;\n  let smooth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    value,\n    factor: smooth ? 60 / fpsLimit : 60 * value / 1000\n  };\n}\n\nfunction loadContainerOptions(engine, container) {\n  const options = new Options(engine, container);\n\n  for (var _len = arguments.length, sourceOptionsArr = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    sourceOptionsArr[_key - 2] = arguments[_key];\n  }\n\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\n\nconst defaultPathGeneratorKey = \"default\",\n      defaultPathGenerator = {\n  generate: p => p.velocity,\n  init: () => {},\n  update: () => {},\n  reset: () => {}\n};\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this.id = id;\n\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n\n        (entry.isIntersecting ? this.play : this.pause)();\n      }\n    };\n\n    this._nextFrame = async timestamp => {\n      try {\n        if (!this.smooth && this.lastFrameTime !== undefined && timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n          this.draw(false);\n          return;\n        }\n\n        this.lastFrameTime ??= timestamp;\n        const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n        this.addLifeTime(delta.value);\n        this.lastFrameTime = timestamp;\n\n        if (delta.value > 1000) {\n          this.draw(false);\n          return;\n        }\n\n        await this.particles.draw(delta);\n\n        if (!this.alive()) {\n          this.destroy();\n          return;\n        }\n\n        if (this.getAnimationStatus()) {\n          this.draw(false);\n        }\n      } catch (e) {\n        getLogger().error(`${errorPrefix} in animation loop`, e);\n      }\n    };\n\n    this._engine = engine;\n    this.fpsLimit = 120;\n    this.smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this._intersectionObserver = new IntersectionObserver(entries => this._intersectionManager(entries));\n    }\n\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const el = this.interactivity.element;\n\n    if (!el) {\n      return;\n    }\n\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      const pxRatio = this.retina.pixelRatio,\n            posRetina = {\n        x: pos.x * pxRatio,\n        y: pos.y * pxRatio\n      },\n            particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      const mouseEvent = e,\n            pos = {\n        x: mouseEvent.offsetX || mouseEvent.clientX,\n        y: mouseEvent.offsetY || mouseEvent.clientY\n      };\n      clickOrTouchHandler(e, pos, 1);\n    };\n\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touched = true;\n      touchMoved = false;\n    };\n\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touchMoved = true;\n    };\n\n    const touchEndHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n\n          if (!lastTouch) {\n            return;\n          }\n        }\n\n        const element = this.canvas.element,\n              canvasRect = element ? element.getBoundingClientRect() : undefined,\n              pos = {\n          x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n          y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)\n        };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    let touched = false,\n        touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n\n  addPath(key, generator) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n\n    this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n    return true;\n  }\n\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n\n    for (const [, drawer] of this.drawers) {\n      drawer.destroy && drawer.destroy(this);\n    }\n\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n\n    this._engine.plugins.destroy(this);\n\n    this.destroyed = true;\n\n    const mainArr = this._engine.dom(),\n          idx = mainArr.findIndex(t => t === this);\n\n    if (idx >= 0) {\n      mainArr.splice(idx, 1);\n    }\n\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    let refreshTime = force;\n    this._drawAnimationFrame = requestAnimationFrame(async timestamp => {\n      if (refreshTime) {\n        this.lastFrameTime = undefined;\n        refreshTime = false;\n      }\n\n      await this._nextFrame(timestamp);\n    });\n  }\n\n  async export(type) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (const [, plugin] of this.plugins) {\n      if (!plugin.export) {\n        continue;\n      }\n\n      const res = await plugin.export(type, options);\n\n      if (!res.supported) {\n        continue;\n      }\n\n      return res.blob;\n    }\n\n    getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n  }\n\n  getAnimationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.particles.handleClickMode(mode);\n\n    for (const [, plugin] of this.plugins) {\n      plugin.handleClickMode && plugin.handleClickMode(mode);\n    }\n  }\n\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const shapes = this._engine.plugins.getSupportedShapes();\n\n    for (const type of shapes) {\n      const drawer = this._engine.plugins.getShapeDrawer(type);\n\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n\n    const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n    this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n    this._lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n    this.smooth = this.actualOptions.smooth;\n\n    for (const [, drawer] of this.drawers) {\n      drawer.init && (await drawer.init(this));\n    }\n\n    for (const [, plugin] of this.plugins) {\n      plugin.init && (await plugin.init());\n    }\n\n    this._engine.dispatchEvent(\"containerInit\", {\n      container: this\n    });\n\n    this.particles.init();\n    this.particles.setDensity();\n\n    for (const [, plugin] of this.plugins) {\n      plugin.particlesSetup && plugin.particlesSetup();\n    }\n\n    this._engine.dispatchEvent(\"particlesSetup\", {\n      container: this\n    });\n  }\n\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this._currentTheme = name;\n    await this.refresh();\n  }\n\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimationFrame(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n\n    if (this._paused) {\n      return;\n    }\n\n    for (const [, plugin] of this.plugins) {\n      plugin.pause && plugin.pause();\n    }\n\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const needsUpdate = this._paused || force;\n\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n\n    if (this._paused) {\n      this._paused = false;\n    }\n\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n\n    this.draw(needsUpdate || false);\n  }\n\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.stop();\n    return this.start();\n  }\n\n  async reset() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this._initialSourceOptions = undefined;\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    return this.refresh();\n  }\n\n  setNoise(noiseOrGenerator, init, update) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.setPath(noiseOrGenerator, init, update);\n  }\n\n  setPath(pathOrGenerator, init, update) {\n    if (!pathOrGenerator || !guardCheck(this)) {\n      return;\n    }\n\n    const pathGenerator = { ...defaultPathGenerator\n    };\n\n    if (isFunction(pathOrGenerator)) {\n      pathGenerator.generate = pathOrGenerator;\n\n      if (init) {\n        pathGenerator.init = init;\n      }\n\n      if (update) {\n        pathGenerator.update = update;\n      }\n    } else {\n      const oldGenerator = pathGenerator;\n      pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n      pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n      pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n    }\n\n    this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n  }\n\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      this._delayTimeout = setTimeout(async () => {\n        this._eventListeners.addListeners();\n\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n\n        for (const [, plugin] of this.plugins) {\n          plugin.start && (await plugin.start());\n        }\n\n        this._engine.dispatchEvent(\"containerStarted\", {\n          container: this\n        });\n\n        this.play();\n        resolve();\n      }, this._delay);\n    });\n  }\n\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n\n    this._firstStart = true;\n    this.started = false;\n\n    this._eventListeners.removeListeners();\n\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n\n    for (const [, plugin] of this.plugins) {\n      plugin.stop && plugin.stop();\n    }\n\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n\n    this._sourceOptions = this._options;\n\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n\n    if (this.responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n\n    this.responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n\n}","map":{"version":3,"names":["getLogger","isFunction","Canvas","EventListeners","Options","Particles","Retina","errorPrefix","getRangeValue","loadOptions","guardCheck","container","destroyed","initDelta","value","fpsLimit","smooth","factor","loadContainerOptions","engine","options","sourceOptionsArr","defaultPathGeneratorKey","defaultPathGenerator","generate","p","velocity","init","update","reset","Container","constructor","id","sourceOptions","_intersectionManager","entries","actualOptions","pauseOnOutsideViewport","entry","target","interactivity","element","isIntersecting","play","pause","_nextFrame","timestamp","lastFrameTime","undefined","draw","delta","addLifeTime","particles","alive","destroy","getAnimationStatus","e","error","_engine","_delay","_duration","_lifeTime","_firstStart","started","_paused","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","pathGenerators","Map","mouse","clicking","inside","plugins","drawers","_options","_eventListeners","IntersectionObserver","_intersectionObserver","dispatchEvent","addClickHandler","callback","el","clickOrTouchHandler","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","touches","length","changedTouches","canvasRect","getBoundingClientRect","left","top","Math","max","radiusX","radiusY","touchCancelHandler","addEventListener","addPath","key","generator","override","has","set","stop","drawer","keys","delete","mainArr","dom","idx","findIndex","t","splice","force","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","type","plugin","res","supported","blob","handleClickMode","mode","shapes","getSupportedShapes","getShapeDrawer","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","duration","delay","setDensity","particlesSetup","loadTheme","name","_currentTheme","refresh","cancelAnimationFrame","needsUpdate","autoPlay","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","pathGenerator","oldGenerator","Promise","resolve","_delayTimeout","setTimeout","addListeners","HTMLElement","observe","clearTimeout","removeListeners","clear","unobserve","responsive","newMaxWidth","setResponsive","size","width","setTheme","responsiveMaxWidth"],"sources":["/Users/mohammedhusain/myportfolio/node_modules/tsparticles-engine/esm/Core/Container.js"],"sourcesContent":["import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}